{%- from 'macros.jinja' import eslint_extensions, stylelint_extensions -%}

$schema: "https://moonrepo.dev/schemas/tasks.json"

taskOptions:
  windowsShell: pwsh
  inferInputs: true
  envFile:
    - /.env
    - /.moon/.env.answers

fileGroups:
  eslint:
    - "**/*.{{ eslint_extensions() }}"

  stylelint:
    - "**/*.{{ stylelint_extensions() }}"

tasks:
  runx:
    command: "$taskToolchain $workspaceRoot/.moon/utils/task-runner.ts"
    toolchain: "{{ frontend_toolchain }}"
    local: true
    options:
      interactive: true
      cache: false
      internal: true

  eslint:
    command:
      - eslint
      - --no-error-on-unmatched-pattern
      - --exit-on-fatal-error
      - --cache
      - --cache-location=$workspaceRoot/.moon/cache/.eslintcache
    args:
      - "@files(eslint)"
    toolchain: {{ frontend_toolchain }}
    inputs:
      - "@group(eslint)"
    options:
      mergeArgs: prepend
      internal: true


  eslint-fix:
    extends: eslint
    args:
      - --fix
      # - --fix-type problem,suggestion,layout

  stylelint:
    command:
      - stylelint
      - --allow-empty-input
    args:
      - "@files(stylelint)"
    inputs:
      - "@group(stylelint)"
    toolchain: {{ frontend_toolchain }}
    options:
      mergeArgs: prepend
      internal: true

  stylelint-fix:
    extends: stylelint
    args:
      - --fix=strict

  watcher.base:
    toolchain: rust
    preset: watcher
    options:
      internal: true
      cache: false
      outputStyle: buffer-only-failure
      runFromWorkspaceRoot: true

  watcher.pre:
    extends: watcher.base
    script: |
      {{ frontend_toolchain }} rimraf @meta(signal-source)
      && {{ frontend_toolchain }} rimraf @meta(signal-config)
    preset: null

  watcher.windows:
    extends: watcher.base
    command: |
      powershell -File .moon/utils/invoke-repeatargs.ps1
      watchexec
      --debounce=2
      --print-events
      --quiet
    toolchain: system
    deps: [~:watcher.pre]
    options:
      os: ["windows"]

  watcher.unix:
    extends: watcher.base
    deps: [~:watcher.pre]
    options:
      os: ["linux", "macos"]

  watcher.config:
    extends: watcher.base
    deps:
      - target: ~:watcher.windows
        args: |
          --watch @root(configs)
          *-- --filter= @group(configs) --*
          {{ frontend_toolchain }} touch @meta(signal-config)

  watcher.source:
    extends: watcher.base
    deps:
      - target: ~:watcher.windows
        args: |
          --watch @root(sources)
          *-- --filter= @group(sources) --*
          {{ frontend_toolchain }} touch @meta(signal-source)


  watcher.all:
    extends: watcher.base
    deps: [~:watcher.config, ~:watcher.source]
    options:
      internal: false


