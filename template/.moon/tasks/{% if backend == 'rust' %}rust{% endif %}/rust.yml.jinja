$schema: "https://moonrepo.dev/schemas/tasks.json"
extends: file://../../../wizard/rust/tasks.yml

tasks:
  clean:
    command: cargo clean -p $projectName
    toolchain: rust
    options:
      runFromWorkspaceRoot: true
      outputStyle: buffer-only-failure
      cache: false

  clippy:
    command: clippy -p $projectName -q
    args:
      - --
      - --no-deps
      - -Dwarnings
    inputs:
      - "/Cargo.toml"
      - "/**/Cargo.toml"
      - "/**/*.rs"
    toolchain: rust
    options:
      runFromWorkspaceRoot: true
      outputStyle: buffer-only-failure
      mergeArgs: prepend
      internal: true

  clippy-fix:
    extends: clippy
    args:
      - --fix
      - --allow-dirty

  fmt:
    command: fmt -p $projectName -- --emit files
    inputs:
      - "/Cargo.toml"
      - "/**/Cargo.toml"
      - "/**/*.rs"
    options:
      runFromWorkspaceRoot: true
      outputStyle: buffer-only-failure
      internal: true

  lint:
    command: noop
    deps: ["~:clippy", "~:eslint"]
    options:
      runDepsInParallel: false
      outputStyle: buffer-only-failure
      cache: false

  format:
    command: noop
    deps: ["~:fmt", "~:clippy-fix", "~:eslint-fix"]
    options:
      runDepsInParallel: false
      outputStyle: buffer-only-failure
      cache: false

#   cargo-recipe:
#     command: chef prepare --recipe-path cargo-recipe.json
#     toolchain: rust
#     inputs:
#       - rust/**/*
#       - .cargo/**/*
#       - Cargo.toml
#       - Cargo.lock
#     outputs:
#       - cargo-recipe.json
#     options:
#       runFromWorkspaceRoot: true
#       mutex: cargo-recipe

  builder:
    extends: compose.up
    args: [rust-builder]
    deps: [wizard:watcher]
    preset: server
    options:
      mutex: rust-builder
      internal: true
