{%- from 'macros.jinja' import eslint_extensions -%}

$schema: "https://moonrepo.dev/schemas/project.json"

id: wizard
type: scaffolding
language: typescript
project:
  name: "Wizard"
  description: "Code generation templates"
  metadata:
    signal-source: .moon/cache/.changes/tools/source
    signal-config: .moon/cache/.changes/tools/config

fileGroups:
  sources:
    - "**/*"

  configs:
    - /.dockerignore
    - /.editorconfig
    - /.env
    - /.gitignore
    - /.browserslistrc
    - /*.{toml,ts,json}

  eslint:
    - "**/*.{{ eslint_extensions() }}"
    - "/*.{{ eslint_extensions() }}"
    - "/angular/*.{{ eslint_extensions() }}"
    - "/.moon/**/*.{{ eslint_extensions() }}"
    - "!/.moon/cache/**/*"
    - "!*/templates/**/*"


{% macro generator_task(name, tpl, note) -%}
  "{{ name }}":
    description: "{{ note }}"
    script: moon generate {{ tpl }} && moon run wizard:sync
    toolchain: system
    options:
      runFromWorkspaceRoot: true
      interactive: true
      cache: false
{%- endmacro %}

tasks:
  {% if frontend == 'angular' -%}
  sync.angular:
    description: Sync angular configs from project & moon configs
    command: {{ frontend_toolchain }} wizard/angular/scripts/sync-configs.ts
    inputs:
      - /angular/*/ng-config.json
      - /rust/*/moon.yml
    options:
      runFromWorkspaceRoot: true
      mutex: wizard-sync-angular
      internal: true
      cache: false

  {{ generator_task('ng-app', 'angular-app', 'Add angular app') }}

  {{ generator_task('ng-lib', 'angular-lib', 'Add angular lib') }}
  {%- endif %}

  {% if backend == 'rust' -%}
  sync.rust:
    description: Sync rust configs from project & moon configs
    command: {{ frontend_toolchain }} wizard/rust/scripts/sync-configs.ts
    inputs:
      - /Cargo.toml
      - /rust/*/moon.yml
    options:
      runFromWorkspaceRoot: true
      mutex: wizard-sync-rust
      internal: true
      cache: false

  {{ generator_task('rust-app', 'rust-package -- --type=application', 'Add rust app') }}
  {{ generator_task('rust-lib', 'rust-package -- --type=library', 'Add rust app') }}
  {{ generator_task('rust-axum', 'rust-package -- --type=application --preset=axum', 'Add rust app') }}
  {%- endif %}

  format:
    command: noop
    deps: ["~:eslint-fix", "~:stylelint-fix"]
    options:
      runDepsInParallel: false

  sync.moon:
    command: moon sync projects
    toolchain: system
    options:
      internal: true
      cache: false

  sync:
    command: moon :format --affected
    deps:
      {% if frontend == 'angular' -%}
      - sync.angular
      {%- endif %}
      {% if backend == 'rust' -%}
      - sync.rust
      {%- endif %}
      - sync.moon
    options:
      runDepsInParallel: false
      runFromWorkspaceRoot: true
      mutex: wizard-sync-all
      cache: false
